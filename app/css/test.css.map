{"version":3,"sources":["../_source/sass/test.scss","../_source/_function/mobile-mixin/_rem-calc.scss","test.css","../_source/_function/mobile-mixin/_rem-sprites.scss"],"names":[],"mappings":"AAEA;EACC,qBAAa;EAAb,qBAAa;EAAb,cAAa;EAEb,oEAAqD;EAArD,4DAAqD;EAErD,cAAa;EACb,gBCkCsE;GDjCtE,QAAQ;CEHR;;AFKD;EACC,gBC8BsE;CChCtE;;ACuDW;EAIQ,iDAA4B;EAEhC,+BAT6H;EAU7H,6BAA4B;CDxD3C;;ACiE+B;EACI,eFxCmC;EEyCnC,eFzCmC;EE0CnC,iCArBkL;CDzCrN;ACyFO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,yBAnD0M;CDpCrN;;ACoFO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,iCAnD0M;CD9BrN;;AC8EO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,iCAnD0M;CDxBrN;;ACwEO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,iCAnD0M;CDlBrN;;ACkEO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,iCAnD0M;CDZrN;;AC4DO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,iCAnD0M;CDNrN;;ACsDO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,iCAnD0M;CDArN;;ACgDO;EACI,eFtE2D;EEuE3D,eFvE2D;EEwE3D,4BAnD0M;CDMrN","file":"test.css","sourcesContent":["@import \"compass\",\"mobile-mixin\";\r\n\r\nbody{\r\n\tdisplay: flex;\r\n\t// background: yellow;\r\n\tbackground-image:linear-gradient(to top,orange,green);\r\n\t// @include background-image(radial-gradient(45px 45px, cyan 10px, dodgerblue 30px));\r\n\tcolor: yellow;\r\n\twidth: rem-calc(90);\r\n\t_zoom: 1;\r\n}\r\n.head{\r\n\tfont-size: rem-calc(80);\r\n}\r\n\r\n@include rem-sprites(\"cur/*.png\");\r\n\r\n// div{\r\n// \t@include rem-sprite(\"cur/*.png\",lv1);\r\n// }\r\n","// This is the default html and body font-size for the base rem value.\r\n$rem-base: 16px !default; // $desgin:(27:720, 24:640, 18:480, 12:320 );\r\n// IMPORT ONCE\r\n// We use this to prevent styles from being loaded multiple times for compenents that rely on other components. \r\n$modules: () !default;\r\n@mixin exports($name) {\r\n    @if (index($modules, $name)==null) {\r\n        $modules: append($modules, $name) !global;\r\n        @content;\r\n    }\r\n    @else {\r\n        @warn \"已存在，请不要重复引用\";\r\n    }\r\n}\r\n\r\n// ======================\r\n// @functions\r\n// ======================\r\n// STRIP UNIT\r\n// It strips the unit of measure and returns it\r\n@function strip-unit($num) {\r\n    @return $num / ($num * 0 + 1);\r\n}\r\n\r\n// CONVERT TO REM\r\n// *\r\n//  * 把px转换成rem\r\n//  * @param  {Number,String} $value       要转换的值\r\n//  * @param  {Number} $base-value: $rem-base     计算转换参考的基数，默认16px\r\n//  * @return {Number,String}              转换后的值\r\n \r\n@function convert-to-rem($value, $base-value: $rem-base) {\r\n    // Check if the value is a number\r\n    @if type-of($value) !='number' {\r\n        @if $value !=auto {\r\n            @warn inspect($value) + ' was passed to rem-calc(), which is not a number or \"auto\".';\r\n        }\r\n        @return $value;\r\n    }\r\n    // Calculate rem if units for $value is not rem\r\n    @if unit($value) !='rem' {\r\n        @if strip-unit($base-value) < 320 {\r\n            $value: strip-unit($value) / strip-unit($base-value) * 1rem;\r\n        }\r\n        @else {\r\n            $value: strip-unit($value) * 320 / strip-unit($base-value) / 12 * 1rem;\r\n        }\r\n    }\r\n    // Turn 0rem into 0\r\n    @if $value==0rem {\r\n        $value: 0;\r\n    }\r\n    @return $value;\r\n}\r\n\r\n\r\n// *\r\n//  * 将px转换成rem的具体实现\r\n//  * @param  {Number,Array} $values      要转换的数值，活着一组要转换的数值\r\n//  * @param  {Number} $base-value: $rem-base     计算转换参考的基数，默认16px\r\n//  * @return {Number,String}              转换后的值\r\n \r\n@function rem-calc($values, $base-value: $rem-base) {\r\n    $rem-values: ();\r\n    $count: length($values);\r\n    @if $count==1 {\r\n        @return convert-to-rem($values, $base-value);\r\n    }\r\n    @for $i from 1 through $count {\r\n        $rem-values: append($rem-values, convert-to-rem(nth($values, $i), $base-value));\r\n    }\r\n    @return $rem-values;\r\n}\r\n","body {\r\n  display: flex;\r\n  background-image: linear-gradient(to top, #ffa500, #008000);\r\n  color: yellow;\r\n  width: 5.625rem;\r\n  _zoom: 1;\r\n}\r\n\r\n.head {\r\n  font-size: 5rem;\r\n}\r\n\r\n.cur-lv1, .cur-lv2, .cur-lv3, .cur-lv4, .cur-lv5, .cur-lv6, .cur-lv7-active, .cur-lv7, .cur-lv7:active {\r\n  background: url('../images/cur-s0b0a785aa0.png');\r\n  background-size: 4.75rem 44rem;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.cur-lv7:active {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 85.71429%;\r\n}\r\n.cur-lv1 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 0;\r\n}\r\n\r\n.cur-lv2 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 14.28571%;\r\n}\r\n\r\n.cur-lv3 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 28.57143%;\r\n}\r\n\r\n.cur-lv4 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 42.85714%;\r\n}\r\n\r\n.cur-lv5 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 57.14286%;\r\n}\r\n\r\n.cur-lv6 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 71.42857%;\r\n}\r\n\r\n.cur-lv7-active {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 85.71429%;\r\n}\r\n\r\n.cur-lv7 {\r\n  width: 4.75rem;\r\n  height: 5.5rem;\r\n  background-position: 0 100%;\r\n}\r\n\r\n\r\n","@import \"compass\";\r\n// *\r\n//  * 计算宽度\r\n//  * @param  {url} $map       合成后图片的url\r\n//  * @param  {图片名称} $item:null 指定图片的名称\r\n//  * @param  {Number} $base-value: $rem-base     合图使用的计算基数，可以根据字体大小也可以根据设计稿尺寸设定\r\n//  * @return {Number}            转换后值\r\n \r\n@function calc-width($map, $item:null, $base-value: $rem-base) {\r\n    @if $item {\r\n        @return rem-calc(sprite-width($map, $item), $base-value);\r\n    }\r\n    @else {\r\n        @return rem-calc(sprite-width($map), $base-value);\r\n    }\r\n}\r\n\r\n// *\r\n//  * 计算高度\r\n//  * @param  {url} $map       合成后图片的url\r\n//  * @param  {图片名称} $item:null 指定图片的名称\r\n//  * @param  {Number} $base-value: $rem-base     合图使用的计算基数，可以根据字体大小也可以根据设计稿尺寸设定\r\n//  * @return {Number}            转换后值\r\n \r\n@function calc-height($map, $item:null, $base-value: $rem-base) {\r\n    @if $item {\r\n        @return rem-calc(sprite-height($map, $item), $base-value);\r\n    }\r\n    @else {\r\n        @return rem-calc(sprite-height($map), $base-value);\r\n    }\r\n}\r\n\r\n$sprites:() !default;\r\n$lists:() !default;\r\n// *\r\n//  * 单个合图引用私有mixin\r\n//  * @param  {url} $map                合图后的返回的url\r\n//  * @param  {图片名称} $name           指定图片的名称\r\n//  * @param  {Boolean} $dimensions:true    指定是否输出width和height\r\n//  * @param  {Boolean} $active:false       指定是否添加点击状态\r\n//  * @param  {Number} $rem-base:$rem-base 合图使用的计算基数，可以根据字体大小也可以根据设计稿尺寸设定\r\n//  * @param  {Boolean} $line-image:false   指定图片引用是否采用base,默认为false\r\n//  * @return {无}                 \r\n \r\n@mixin _rem-sprite($map, $name, $dimensions:true, $active:false, $rem-base:$rem-base,$line-image:false) {\r\n    $dir-name: sprite-map-name($map);\r\n    $my-args: ($dir-name);\r\n    $names: sprite-names($map);\r\n    @if index($sprites, $my-args)==null {\r\n        $sprites: append($sprites, $my-args) !global;\r\n        @debug sprite-url($map);\r\n        @at-root {\r\n            @each $name in $names {\r\n                $iconPosXInSprite: nth(sprite-position($map, $name), 1);\r\n                $iconPosYInSprite: nth(sprite-position($map, $name), 2);\r\n                @if $iconPosXInSprite !=0 {\r\n                    $iconPosXInSprite: $iconPosXInSprite / (sprite-width($map, $name) - sprite-width($map)) * 100%;\r\n                }\r\n                @if $iconPosYInSprite !=0 {\r\n                    $iconPosYInSprite: $iconPosYInSprite / (sprite-height($map, $name) - sprite-height($map)) * 100%;\r\n                }\r\n                $lists: map-merge($lists, (#{$my-args}-size: calc-width($map,$base-value: $rem-base) calc-height($map,$base-value: $rem-base))) !global;\r\n                $lists: map-merge($lists, (#{$my-args+\"-\"+$name}: ( name: $name, width: calc-width($map, $name, $rem-base), height: calc-height($map, $name, $rem-base), position: $iconPosXInSprite $iconPosYInSprite))) !global;\r\n            }\r\n            %#{$my-args} {\r\n                @if $line-image == true {\r\n                    background: inline-sprite($map);\r\n                } @else {\r\n                    background: sprite-url($map);\r\n                }\r\n                background-size: map-get($lists, #{$my-args}-size);\r\n                background-repeat: no-repeat;\r\n            }\r\n            @if $active {\r\n                @each $name in $names {\r\n                    $_activename: #{$my-args+\"-\"+$name}-active;\r\n                    @if map-has-key($lists, $_activename) {\r\n                        $id-active: map-get($lists, $_activename);\r\n                        %#{$my-args+\"-\"+map-get($id-active,name)} {\r\n                            @if $dimensions {\r\n                                & {\r\n                                    width: map-get($id-active, width);\r\n                                    height: map-get($id-active, height);\r\n                                    background-position: map-get($id-active, position);\r\n                                }\r\n                            }\r\n                            @else {\r\n                                & {\r\n                                    background-position: map-get($id-active, position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    & {\r\n        @extend %#{$my-args};\r\n    }\r\n    $id:map-get($lists, #{$my-args+\"-\"+$name});\r\n    $_activename: #{$my-args+\"-\"+$name}-active;\r\n    $id-active:map-get($lists, $_activename);\r\n    @if map-has-key($lists, $_activename) {\r\n        &:active {\r\n            @extend %#{$my-args};\r\n            @extend %#{$my-args+\"-\"+map-get($id-active,name)};\r\n        }\r\n    }\r\n    @if $dimensions {\r\n        & {\r\n            width: map-get($id, width);\r\n            height: map-get($id, height);\r\n            background-position: map-get($id, position);\r\n        }\r\n    }\r\n    @else {\r\n        & {\r\n            background-position: map-get($id, position);\r\n        }\r\n    }\r\n}\r\n// *\r\n//  * 合成图片多个引用的私有方法\r\n//  * @param  {url} $map                                 合图后的返回的url\r\n//  * @param  {Boolean} $dimensions:true                     指定是否输出width和height\r\n//  * @param  {Boolean} $active:true                         指定是否添加点击状态\r\n//  * @param  {String} $pre-name:null                       class的前缀，默认根据文件夹名称\r\n//  * @param  {String} $separator:$default-sprite-separator class中间的连接符\r\n//  * @param  {Number} $rem-base:$rem-base                  合图使用的计算基数，可以根据字体大小也可以根据设计稿尺寸设定\r\n//  * @param  {Boolean} $line-image:false                    指定图片引用是否采用base,默认为false\r\n//  * @return {无}                                      \r\n \r\n@mixin _rem-sprites($map, $dimensions:true, $active:true, $pre-name:null, $separator:$default-sprite-separator, $rem-base:$rem-base, $line-image:false) {\r\n    $names: sprite-names($map);\r\n    $dir-name: $pre-name or sprite-map-name($map);\r\n    @each $name in $names {\r\n        .#{$dir-name + $separator + $name} {\r\n            @include _rem-sprite($map, $name, $dimensions, $active, $rem-base, $line-image);\r\n        }\r\n    }\r\n}\r\n\r\n// *\r\n//  * 公有单个合图图片的引用mixin\r\n//  * @param  {String} $dir-name:null      要合成图片的本地地址\r\n//  * @param  {图片名称} $name:null          指定图片的名称\r\n//  * @param  {Boolean} $dimensions:true    指定是否输出width和height\r\n//  * @param  {Boolean} $active:true        指定是否添加点击状态\r\n//  * @param  {Number} $rem-base:$rem-base 合图使用的计算基数，可以根据字体大小也可以根据设计稿尺寸设定\r\n//  * @param  {Number} $spacing:           0px           合成图片之间的间隔，默认为“0px”\r\n//  * @param  {Boolean} $line-image:false   指定图片引用是否采用base,默认为false\r\n//  * @return {无}                     \r\n \r\n@mixin rem-sprite($dir-name:null, $name:null, $dimensions:true, $active:true, $rem-base:$rem-base, $spacing: 0px, $line-image:false) {\r\n    $map: null;\r\n    @if $dir-name !=null and type-of($dir-name)==string {\r\n        $map: sprite-map($dir-name, $spacing: $spacing);\r\n        @if $name !=null {\r\n            @include _rem-sprite($map, $name, $dimensions, $active, $rem-base, $line-image)\r\n        }\r\n        @else {\r\n            @warn \"==== 第二个参数必填，请输入具体的图片名称！====\";\r\n        }\r\n    }\r\n    @else {\r\n        @warn \"==== 请引入要合成的图片！====\";\r\n    }\r\n}\r\n\r\n// *\r\n//  * 公有多个合图图片的引用mixin\r\n//  * @param  {String} $dir-name:null                       要合成图片的本地地址\r\n//  * @param  {Boolean} $dimensions:true                     指定是否输出width和height\r\n//  * @param  {Boolean} $active:true                         指定是否添加点击状态\r\n//  * @param  {String} $pre-name:null                       class的前缀，默认根据文件夹名称\r\n//  * @param  {String} $separator:$default-sprite-separator class中间的连接符,默认“-”\r\n//  * @param  {Number} $rem-base:$rem-base                  合图使用的计算基数，可以根据字体大小也可以根据设计稿尺寸设定\r\n//  * @param  {Number} $spacing:                            0px           合成图片之间的间隔，默认为“0px”\r\n//  * @param  {Boolean} $line-image:false                    指定图片引用是否采用base,默认为false\r\n//  * @return {无}                                     \r\n \r\n@mixin rem-sprites($dir-name:null, $dimensions:true, $active:true, $pre-name:null, $separator:$default-sprite-separator, $rem-base:$rem-base, $spacing: 0px, $line-image:false) {\r\n    $map: null;\r\n    @if $dir-name !=null and type-of($dir-name)==string {\r\n        $map: sprite-map($dir-name, $spacing: $spacing);\r\n        @include _rem-sprites($map, $dimensions, $active, $pre-name, $separator, $rem-base,$line-image);\r\n    }\r\n    @else {\r\n        @warn \"==== 请引入要合成的图片！====\";\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}